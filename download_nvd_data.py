import requests
import json
import os
import gzip
import shutil
from pandas import json_normalize


years = list(range(2002, 2024))
feeds = [f"nvdcve-1.1-{year}.json.gz" for year in years]
feeds.append("nvdcve-1.1-recent.json.gz")  # add the 'recent' feed for the latest data

base_url = "https://nvd.nist.gov/feeds/json/cve/1.1/"

output_dir = os.path.join(os.path.dirname(__file__), "data")
main_csv_path = os.path.join(output_dir, "nvd_cve.csv")


def download_and_unzip_feed(feed_name):
    url = base_url + feed_name
    output_path = os.path.join(output_dir, feed_name)

    response = requests.get(url, stream=True)
    if response.status_code == 200:
        with open(output_path, 'wb') as file:
            for chunk in response.iter_content(chunk_size=1024):
                file.write(chunk)
        print(f"Downloaded {feed_name} successfully.")
    else:
        print(f"Failed to download {feed_name}. Status code: {response.status_code}")
        return None

    unzipped_path = output_path.replace('.gz', '')
    with gzip.open(output_path, 'rb') as f_in:
        with open(unzipped_path, 'wb') as f_out:
            shutil.copyfileobj(f_in, f_out)
    print(f"Unzipped {feed_name} successfully.")

    return unzipped_path


def process_and_append_to_csv(json_file_path, csv_path):
    with open(json_file_path, 'r') as f:
        cve_data = json.load(f)

    df = json_normalize(cve_data['CVE_Items'])

    if not os.path.isfile(csv_path):
        df.to_csv(csv_path, index=False)
    else:
        df.to_csv(csv_path, mode='a', header=False, index=False)

    print(f"Appended data from {json_file_path} to {csv_path}")


for feed in feeds:
    json_file_path = download_and_unzip_feed(feed)

    if json_file_path:
        process_and_append_to_csv(json_file_path, main_csv_path)

        try:
            os.remove(json_file_path)
            print(f"Deleted {json_file_path}")
        except OSError as e:
            print(f"Error deleting {json_file_path}: {e}")

        gz_file_path = json_file_path + '.gz'
        try:
            os.remove(gz_file_path)
            print(f"Deleted {gz_file_path}")
        except OSError as e:
            print(f"Error deleting {gz_file_path}: {e}")

print("All feeds downloaded, processed, and combined into a single CSV file.")
